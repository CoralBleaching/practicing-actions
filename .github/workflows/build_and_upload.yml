name: CMake Build and Upload

on: [push]

jobs:
  build:
    permissions: write-all
    name: ${{ matrix.config.name }}
    runs-on: ${{ matrix.config.os }}
    strategy:
      matrix:
        config:
        - {
          artifact: "hello_world.zip",
          compression_method: "czvf",
          name: "Windows Latest MSVC",
          os: windows-latest,
          platform: "windows",
          app_type: zip
        }
        - {
        name: "Ubuntu Latest GCC",
        os: ubuntu-latest,
        platform: "ubuntu",
        compression_method: "cJfv",
        artifact: "hello_world.tar.xz",
        app_type: x-xz
        }
    
    steps:
    - uses: actions/checkout@v3.5.0

    - name: Configure CMake ${{ matrix.config.platform }}
      run: cmake -B build -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=${{github.workspace}}/install/

    - name: Build
      run: cmake --build build --config Release

    - name: Install Strip
      run: cmake --install build --prefix ${{github.workspace}}/install/ --strip

    - name: Pack release
      working-directory: ${{github.workspace}}/install/
      run:  cmake -E tar ${{ matrix.config.compression_method }} ../${{ matrix.config.artifact }} .

    # - name: Create Release
    #     id: create_release
    #     uses: actions/create-release@v1.1.4
    #     env:
    #       GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    #     with:
    #       tag_name: ${{ github.ref }}
    #       release_name: Release ${{ github.ref }}
    #       draft: false
    #       prerelease: false
    - uses: "marvinpinto/action-automatic-releases@latest"
      with:
        repo_token: "${{ secrets.GITHUB_TOKEN }}"
        automatic_release_tag: "latest"
        prerelease: true
        title: "Development Build"
        files: ./${{ matrix.config.artifact }}
    # - name: Upload Release Asset
    #   uses: actions/upload-release-asset@v1.0.2
    #   env:
    #     GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }}
    #   with:
    #     upload_url: ${{ steps.create_release.outputs.upload_url }}
    #     asset_path: ${{ matrix.config.artifact }}
    #     asset_name: ${{ matrix.config.artifact }}
    #     asset_content_type: application/${{ matrix.config.app_type }}